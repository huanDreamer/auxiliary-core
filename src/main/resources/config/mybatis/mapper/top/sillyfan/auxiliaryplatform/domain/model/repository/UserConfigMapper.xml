<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.sillyfan.auxiliaryplatform.domain.model.repository.UserConfigMapper">
  <resultMap id="BaseResultMap" type="top.sillyfan.auxiliaryplatform.domain.model.UserConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="task_title" jdbcType="VARCHAR" property="taskTitle" />
    <result column="task_describe" jdbcType="VARCHAR" property="taskDescribe" />
    <result column="task_expire" jdbcType="INTEGER" property="taskExpire" />
    <result column="prefer_auxiliaries" jdbcType="OTHER" property="preferAuxiliaries" typeHandler="top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler" />
    <result column="prefer_demanders" jdbcType="OTHER" property="preferDemanders" typeHandler="top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.preferAuxiliariesCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler} and #{criterion.secondValue,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.preferDemandersCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler} and #{criterion.secondValue,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.preferAuxiliariesCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler} and #{criterion.secondValue,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.preferDemandersCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler} and #{criterion.secondValue,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, task_title, task_describe, task_expire, prefer_auxiliaries, prefer_demanders
  </sql>
  <select id="selectByExample" parameterType="top.sillyfan.auxiliaryplatform.domain.model.UserConfigExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_user_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_user_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_user_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.sillyfan.auxiliaryplatform.domain.model.UserConfigExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_user_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.sillyfan.auxiliaryplatform.domain.model.UserConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_config (user_id, task_title, task_describe, 
      task_expire, prefer_auxiliaries, 
      prefer_demanders
      )
    values (#{userId,jdbcType=BIGINT}, #{taskTitle,jdbcType=VARCHAR}, #{taskDescribe,jdbcType=VARCHAR}, 
      #{taskExpire,jdbcType=INTEGER}, #{preferAuxiliaries,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}, 
      #{preferDemanders,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.sillyfan.auxiliaryplatform.domain.model.UserConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="taskTitle != null">
        task_title,
      </if>
      <if test="taskDescribe != null">
        task_describe,
      </if>
      <if test="taskExpire != null">
        task_expire,
      </if>
      <if test="preferAuxiliaries != null">
        prefer_auxiliaries,
      </if>
      <if test="preferDemanders != null">
        prefer_demanders,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="taskTitle != null">
        #{taskTitle,jdbcType=VARCHAR},
      </if>
      <if test="taskDescribe != null">
        #{taskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="taskExpire != null">
        #{taskExpire,jdbcType=INTEGER},
      </if>
      <if test="preferAuxiliaries != null">
        #{preferAuxiliaries,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler},
      </if>
      <if test="preferDemanders != null">
        #{preferDemanders,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.sillyfan.auxiliaryplatform.domain.model.UserConfigExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_user_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_user_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.taskTitle != null">
        task_title = #{record.taskTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.taskDescribe != null">
        task_describe = #{record.taskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.taskExpire != null">
        task_expire = #{record.taskExpire,jdbcType=INTEGER},
      </if>
      <if test="record.preferAuxiliaries != null">
        prefer_auxiliaries = #{record.preferAuxiliaries,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler},
      </if>
      <if test="record.preferDemanders != null">
        prefer_demanders = #{record.preferDemanders,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_user_config
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      task_title = #{record.taskTitle,jdbcType=VARCHAR},
      task_describe = #{record.taskDescribe,jdbcType=VARCHAR},
      task_expire = #{record.taskExpire,jdbcType=INTEGER},
      prefer_auxiliaries = #{record.preferAuxiliaries,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler},
      prefer_demanders = #{record.preferDemanders,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.sillyfan.auxiliaryplatform.domain.model.UserConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_user_config
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="taskTitle != null">
        task_title = #{taskTitle,jdbcType=VARCHAR},
      </if>
      <if test="taskDescribe != null">
        task_describe = #{taskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="taskExpire != null">
        task_expire = #{taskExpire,jdbcType=INTEGER},
      </if>
      <if test="preferAuxiliaries != null">
        prefer_auxiliaries = #{preferAuxiliaries,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler},
      </if>
      <if test="preferDemanders != null">
        prefer_demanders = #{preferDemanders,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.sillyfan.auxiliaryplatform.domain.model.UserConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_user_config
    set user_id = #{userId,jdbcType=BIGINT},
      task_title = #{taskTitle,jdbcType=VARCHAR},
      task_describe = #{taskDescribe,jdbcType=VARCHAR},
      task_expire = #{taskExpire,jdbcType=INTEGER},
      prefer_auxiliaries = #{preferAuxiliaries,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler},
      prefer_demanders = #{preferDemanders,jdbcType=OTHER,typeHandler=top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>