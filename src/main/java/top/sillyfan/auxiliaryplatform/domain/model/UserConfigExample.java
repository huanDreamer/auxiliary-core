package top.sillyfan.auxiliaryplatform.domain.model;

import java.util.ArrayList;
import java.util.List;
import top.sillyfan.auxiliaryplatform.domain.model.json.LongSet;

public class UserConfigExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public UserConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> preferAuxiliariesCriteria;

        protected List<Criterion> preferDemandersCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            preferAuxiliariesCriteria = new ArrayList<Criterion>();
            preferDemandersCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getPreferAuxiliariesCriteria() {
            return preferAuxiliariesCriteria;
        }

        protected void addPreferAuxiliariesCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            preferAuxiliariesCriteria.add(new Criterion(condition, value, "top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler"));
            allCriteria = null;
        }

        protected void addPreferAuxiliariesCriterion(String condition, LongSet value1, LongSet value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            preferAuxiliariesCriteria.add(new Criterion(condition, value1, value2, "top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getPreferDemandersCriteria() {
            return preferDemandersCriteria;
        }

        protected void addPreferDemandersCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            preferDemandersCriteria.add(new Criterion(condition, value, "top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler"));
            allCriteria = null;
        }

        protected void addPreferDemandersCriterion(String condition, LongSet value1, LongSet value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            preferDemandersCriteria.add(new Criterion(condition, value1, value2, "top.sillyfan.auxiliaryplatform.dao.mybatis.typehandler.LongSetTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || preferAuxiliariesCriteria.size() > 0
                || preferDemandersCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(preferAuxiliariesCriteria);
                allCriteria.addAll(preferDemandersCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andTaskTitleIsNull() {
            addCriterion("task_title is null");
            return (Criteria) this;
        }

        public Criteria andTaskTitleIsNotNull() {
            addCriterion("task_title is not null");
            return (Criteria) this;
        }

        public Criteria andTaskTitleEqualTo(String value) {
            addCriterion("task_title =", value, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleNotEqualTo(String value) {
            addCriterion("task_title <>", value, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleGreaterThan(String value) {
            addCriterion("task_title >", value, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleGreaterThanOrEqualTo(String value) {
            addCriterion("task_title >=", value, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleLessThan(String value) {
            addCriterion("task_title <", value, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleLessThanOrEqualTo(String value) {
            addCriterion("task_title <=", value, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleLike(String value) {
            addCriterion("task_title like", value, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleNotLike(String value) {
            addCriterion("task_title not like", value, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleIn(List<String> values) {
            addCriterion("task_title in", values, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleNotIn(List<String> values) {
            addCriterion("task_title not in", values, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleBetween(String value1, String value2) {
            addCriterion("task_title between", value1, value2, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskTitleNotBetween(String value1, String value2) {
            addCriterion("task_title not between", value1, value2, "taskTitle");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeIsNull() {
            addCriterion("task_describe is null");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeIsNotNull() {
            addCriterion("task_describe is not null");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeEqualTo(String value) {
            addCriterion("task_describe =", value, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeNotEqualTo(String value) {
            addCriterion("task_describe <>", value, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeGreaterThan(String value) {
            addCriterion("task_describe >", value, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeGreaterThanOrEqualTo(String value) {
            addCriterion("task_describe >=", value, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeLessThan(String value) {
            addCriterion("task_describe <", value, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeLessThanOrEqualTo(String value) {
            addCriterion("task_describe <=", value, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeLike(String value) {
            addCriterion("task_describe like", value, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeNotLike(String value) {
            addCriterion("task_describe not like", value, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeIn(List<String> values) {
            addCriterion("task_describe in", values, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeNotIn(List<String> values) {
            addCriterion("task_describe not in", values, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeBetween(String value1, String value2) {
            addCriterion("task_describe between", value1, value2, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskDescribeNotBetween(String value1, String value2) {
            addCriterion("task_describe not between", value1, value2, "taskDescribe");
            return (Criteria) this;
        }

        public Criteria andTaskExpireIsNull() {
            addCriterion("task_expire is null");
            return (Criteria) this;
        }

        public Criteria andTaskExpireIsNotNull() {
            addCriterion("task_expire is not null");
            return (Criteria) this;
        }

        public Criteria andTaskExpireEqualTo(Integer value) {
            addCriterion("task_expire =", value, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireNotEqualTo(Integer value) {
            addCriterion("task_expire <>", value, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireGreaterThan(Integer value) {
            addCriterion("task_expire >", value, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_expire >=", value, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireLessThan(Integer value) {
            addCriterion("task_expire <", value, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireLessThanOrEqualTo(Integer value) {
            addCriterion("task_expire <=", value, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireIn(List<Integer> values) {
            addCriterion("task_expire in", values, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireNotIn(List<Integer> values) {
            addCriterion("task_expire not in", values, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireBetween(Integer value1, Integer value2) {
            addCriterion("task_expire between", value1, value2, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andTaskExpireNotBetween(Integer value1, Integer value2) {
            addCriterion("task_expire not between", value1, value2, "taskExpire");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesIsNull() {
            addCriterion("prefer_auxiliaries is null");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesIsNotNull() {
            addCriterion("prefer_auxiliaries is not null");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesEqualTo(LongSet value) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries =", value, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesNotEqualTo(LongSet value) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries <>", value, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesGreaterThan(LongSet value) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries >", value, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesGreaterThanOrEqualTo(LongSet value) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries >=", value, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesLessThan(LongSet value) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries <", value, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesLessThanOrEqualTo(LongSet value) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries <=", value, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesIn(List<LongSet> values) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries in", values, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesNotIn(List<LongSet> values) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries not in", values, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesBetween(LongSet value1, LongSet value2) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries between", value1, value2, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferAuxiliariesNotBetween(LongSet value1, LongSet value2) {
            addPreferAuxiliariesCriterion("prefer_auxiliaries not between", value1, value2, "preferAuxiliaries");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersIsNull() {
            addCriterion("prefer_demanders is null");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersIsNotNull() {
            addCriterion("prefer_demanders is not null");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersEqualTo(LongSet value) {
            addPreferDemandersCriterion("prefer_demanders =", value, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersNotEqualTo(LongSet value) {
            addPreferDemandersCriterion("prefer_demanders <>", value, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersGreaterThan(LongSet value) {
            addPreferDemandersCriterion("prefer_demanders >", value, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersGreaterThanOrEqualTo(LongSet value) {
            addPreferDemandersCriterion("prefer_demanders >=", value, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersLessThan(LongSet value) {
            addPreferDemandersCriterion("prefer_demanders <", value, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersLessThanOrEqualTo(LongSet value) {
            addPreferDemandersCriterion("prefer_demanders <=", value, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersIn(List<LongSet> values) {
            addPreferDemandersCriterion("prefer_demanders in", values, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersNotIn(List<LongSet> values) {
            addPreferDemandersCriterion("prefer_demanders not in", values, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersBetween(LongSet value1, LongSet value2) {
            addPreferDemandersCriterion("prefer_demanders between", value1, value2, "preferDemanders");
            return (Criteria) this;
        }

        public Criteria andPreferDemandersNotBetween(LongSet value1, LongSet value2) {
            addPreferDemandersCriterion("prefer_demanders not between", value1, value2, "preferDemanders");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_config
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_config
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}